plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

// Get git info for reproducible builds
def getGitCommitHash = { ->
    try {
        return 'git rev-parse HEAD'.execute().text.trim()
    } catch (Exception e) {
        return 'unknown'
    }
}

def getGitBranch = { ->
    try {
        return 'git rev-parse --abbrev-ref HEAD'.execute().text.trim()
    } catch (Exception e) {
        return 'unknown'
    }
}

def isGitDirty = { ->
    try {
        def result = 'git diff-index --quiet HEAD'.execute()
        return result.exitValue() != 0
    } catch (Exception e) {
        return false
    }
}

def gitCommitHash = getGitCommitHash()
def gitBranch = getGitBranch()  
def gitIsDirty = isGitDirty()

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdk 36
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }

    defaultConfig {
        applicationId "com.gooseberrydevelopment.pinepods"
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion 36
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        
        // Add git commit info for reproducible builds and vcsInfo
        buildConfigField "String", "GIT_COMMIT_HASH", "\"${gitCommitHash}\""
        buildConfigField "String", "GIT_BRANCH", "\"${gitBranch}\""
        buildConfigField "String", "GIT_IS_DIRTY", "\"${gitIsDirty}\""
    }

    buildFeatures {
        buildConfig = true
    }

    dependenciesInfo {
        // Disables dependency metadata when building APKs (for IzzyOnDroid/F-Droid)
        includeInApk = false
        // Disables dependency metadata when building Android App Bundles (for Google Play)
        includeInBundle = false
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            shrinkResources false
        }

        release {
            signingConfig signingConfigs.release
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt')
        }
    }

    namespace 'com.gooseberrydevelopment.pinepods'

    lint {
        abortOnError false
        disable 'InvalidPackage'
    }

    // Disable PNG crunching for reproducible builds
    aaptOptions {
        cruncherEnabled = false
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation 'com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
